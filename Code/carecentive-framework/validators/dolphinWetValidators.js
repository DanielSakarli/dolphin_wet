const { body } = require('express-validator');
/**
 * This file contains all validation rules of request body generated by express-validator.
 */

// Post request of dolphin endpoint validation rules.
const dolphinPostValidateRequestBody = [
	body('name').notEmpty().withMessage('Dolphin name is required'),
	body('sex')
		.isInt({ min: 0, max: 1 })
		.withMessage('Sex should be either 0 or 1'),
	body('on_site')
		.isInt({ min: 0, max: 1 })
		.withMessage('On-site value should be either 0 or 1'),
	body('year_of_birth')
		.isInt({ min: 1900, max: new Date().getFullYear() })
		.withMessage('Invalid year of birth'),
	body('place_of_birth').notEmpty().withMessage('Place of birth is required'),
];

// Patch request of dolphin endpoint validation rules.
const dolphinPatchValidateRequestBody = [
	// Validate update information
	body().custom((value) => {
		const allowedFields = [
			'on_site',
			'name',
			'sex',
			'year_of_birth',
			'place_of_birth',
		];
		const keys = Object.keys(value);

		// Check if any key is not allowed
		const disallowedKeys = keys.filter((key) => !allowedFields.includes(key));
		if (disallowedKeys.length > 0) {
			throw new Error(`Invalid update fields: ${disallowedKeys.join(', ')}`);
		}

		return true;
	}),
];

/**
 * Good feeding validation rules.
 */
const goodFeedingPostValidateRequestBody = [
	body('dolphin_name')
		.notEmpty()
		.isString()
		.withMessage('Invalid dolphin name'),
	body('body_condition_score')
		.isIn([1, 2, 3])
		.withMessage('Invalid body condition score'),
	body('weight').isIn([1, 3]).withMessage('Invalid weight'),
	body('weight_measured')
		.isFloat({ min: 0 })
		.withMessage('Invalid measured weight'),
	body('kcal_calculations')
		.isIn([1, 3])
		.withMessage('Invalid kcal calculations'),
	body('blood_hydration')
		.isIn([1, 2, 3])
		.withMessage('Invalid blood hydration'),
	body('fish_quality').isIn([1, 3]).withMessage('Invalid fish quality'),
	body('fish_variety').isIn([1, 2, 3]).withMessage('Invalid fish variety'),
];

module.exports = {
	dolphinPostValidateRequestBody,
	dolphinPatchValidateRequestBody,
	goodFeedingPostValidateRequestBody,
};
